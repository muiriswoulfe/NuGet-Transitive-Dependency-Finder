# © Muiris Woulfe
# Licensed under the MIT License

---
name: Release

on:
  workflow_dispatch: null

permissions: {}

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      discussions: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      # Initialization
      - name: INITIALIZATION – Read Version
        id: version
        shell: pwsh
        run: |
          $Version = Get-Content -Path '.github/workflows/input/version.txt' | Select-Object -First 1
          Write-Output -InputObject "VERSION=$Version" >> $Env:GITHUB_OUTPUT

      - name: INITIALIZATION – Read Release Notes
        id: release-notes
        shell: pwsh
        run: |
          $ReleaseNotes = Get-Content -Path '.github/workflows/input/release_notes.txt'
          Write-Output -InputObject "RELEASE_NOTES=$ReleaseNotes" >> $Env:GITHUB_OUTPUT

      # Release
      - name: RELEASE – Create URLs
        id: urls
        shell: pwsh
        run: |-
          $UrlPrefix = '${{ github.server_url }}/${{ github.repository }}'
          $UrlSuffix = '+milestone%3A%22${{ steps.version.outputs.VERSION }}%22+is%3Aclosed'
          Write-Output -InputObject "URL_PREFIX=$UrlPrefix" >> $Env:GITHUB_OUTPUT
          Write-Output -InputObject "URL_SUFFIX=$UrlSuffix" >> $Env:GITHUB_OUTPUT

      - name: RELEASE – Create Release
        uses: softprops/action-gh-release@9d7c94cfd0a1f3ed45544c887983e9fa900f0564 # v0.1.15
        with:
          body: |-
            ## Release Notes

            ${{ steps.release-notes.outputs.RELEASE_NOTES }}

            ## Changes

            This release resolves the issues listed [here][issues] via the pull requests listed [here][prs].

            ## Notes

            - No dependencies are required for any platform.
            - Under Linux and macOS, you will need to run `chmod +x <filename>` from the console prior to starting the
              app.
            - Under macOS, the first time you run the app, you will encounter a security error. Click *Cancel* and go to
              *Apple* > *System Preferences...* > *Security & Privacy* and click *Allow Anyway*. The app should run
              successfully on the subsequent invocation.

            <!-- References -->

            [issues]:
              ${{ steps.urls.outputs.URL_PREFIX }}/issues?q=is%3Aissue${{ steps.urls.outputs.URL_SUFFIX }}
            [prs]:
              ${{ steps.urls.outputs.ASSET_NAME }}/pulls?q=is%3Apr${{ steps.urls.outputs.URL_SUFFIX }}
          discussion_category_name: Releases
          files: ${{ github.workspace }}/ms-omex.PRMetrics.vsix
          generate_release_notes: true
          name: Release v${{ steps.version.outputs.VERSION }}
          tag_name: v${{ steps.version.outputs.VERSION }}

  create-asset:
    name: Create Asset
    needs: create-release
    runs-on: ubuntu-latest
    permissions: {}
    env:
      project: NuGetTransitiveDependencyFinder.ConsoleApp
    strategy:
      fail-fast: false
      matrix:
        runtime:
          [
            linux-arm,
            linux-arm64,
            linux-musl-x64,
            linux-x64,
            osx-x64,
            win-arm64,
            win-x64,
            win-x86,
          ]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      # Initialization
      - name: INITIALIZATION – Checkout
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3

      - name: INITIALIZATION – Read Version
        id: version
        shell: pwsh
        run: |
          $Version = Get-Content -Path '.github/workflows/input/version.txt'
          Write-Output -InputObject "VERSION=$Version" >> $Env:GITHUB_OUTPUT

      - name: INITIALIZATION – Get Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: tag
        uses: jossef/action-latest-release-info@40167002208bfed9f789cccc7d3222fda2d82dd6 # v1.2.1

      - name: INITIALIZATION – Version Replace
        shell: pwsh
        run: |-
          $FileContent = Get-Content -Path 'src/Shared/Properties/AssemblyAttributes.cs' -Raw
          $FileContent = $FileContent -replace '0.0.0', '${{ steps.version.outputs.VERSION }}'
          Set-Content -NoNewline -Path 'src/Shared/Properties/AssemblyAttributes.cs' -Value $FileContent

      - name: INITIALIZATION – .NET Install
        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0

      # Build
      - name: BUILD – Project Restore
        shell: pwsh
        run: dotnet restore src/${{ env.project }}/${{ env.project }}.csproj --runtime ${{ matrix.runtime }}

      - name: BUILD – Project Build
        shell: pwsh
        run: >-
          dotnet build src/${{ env.project }}/${{ env.project }}.csproj
          --configuration Release
          --no-restore
          --runtime ${{ matrix.runtime }}
          --self-contained true
          /property:PublishSingleFile=true
          /maxCpuCount

      # Publish
      - name: PUBLISH – Project Publish
        shell: pwsh
        run: >-
          dotnet publish src/${{ env.project }}/${{ env.project }}.csproj
          --configuration Release
          --no-build
          --runtime ${{ matrix.runtime }}
          --self-contained true
          /property:PublishSingleFile=true

      # Upload
      - name: UPLOAD – Get Platform
        id: platform
        shell: pwsh
        run: |-
          $Platform = '${{ matrix.runtime }}'.Split('-')[0]
          Write-Output -InputObject "PLATFORM=$Platform" >> $Env:GITHUB_OUTPUT

      - name: UPLOAD – Get File Names
        env:
          extension: >-
            {
              "linux": "",
              "osx": "",
              "win": ".exe"
            }
        id: file-names
        shell: pwsh
        run: |-
          $Extension = '${{ fromJson(env.extension)[steps.platform.outputs.PLATFORM] }}'
          $AssetName = "NuGetTransitiveDependencyFinder.ConsoleApp.${{ matrix.runtime }}$Extension"
          $AssetPath = '${{ github.workspace }}/src/${{ env.project }}/bin/Release/net8.0/'
          $AssetPath += "${{ matrix.runtime }}/publish/${{ env.project }}$Extension"
          Write-Output -InputObject "ASSET_NAME=$AssetName" >> $Env:GITHUB_OUTPUT
          Write-Output -InputObject "ASSET_PATH=$AssetPath" >> $Env:GITHUB_OUTPUT

      - name: UPLOAD – Upload Release Asset
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/octet-stream
          asset_name: ${{ steps.file-names.outputs.ASSET_NAME }}
          asset_path: ${{ steps.file-names.outputs.ASSET_PATH }}
          upload_url: ${{ steps.tag.outputs.upload_url }}

  create-nuget:
    name: Create NuGet Package
    needs: create-release
    runs-on: ubuntu-latest
    permissions: {}
    env:
      nuget-package-prefix: src/Product/NuGetTransitiveDependencyFinder/bin/Release/NuGetTransitiveDependencyFinder
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      # Initialization
      - name: INITIALIZATION – Checkout
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3

      - name: INITIALIZATION – Read Version
        id: version
        shell: pwsh
        run: |
          $Version = Get-Content -Path '.github/workflows/input/version.txt'
          Write-Output -InputObject "VERSION=$Version" >> $Env:GITHUB_OUTPUT

      - name: INITIALIZATION – Read Release Notes
        id: release-notes
        shell: pwsh
        run: |
          $ReleaseNotes = Get-Content -Path '.github/workflows/input/release_notes.txt'
          Write-Output -InputObject "RELEASE_NOTES=$ReleaseNotes" >> $Env:GITHUB_OUTPUT

      - name: INITIALIZATION – Version Replace
        shell: pwsh
        run: |-
          $FileContent = Get-Content -Path 'src/Shared/Properties/AssemblyAttributes.cs' -Raw
          $FileContent = $FileContent -replace '0.0.0', '${{ steps.version.outputs.VERSION }}'
          Set-Content -NoNewline -Path 'src/Shared/Properties/AssemblyAttributes.cs' -Value $FileContent

      - name: INITIALIZATION – .NET Install
        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0

      # Create Logo
      - name: CREATE LOGO – Install svgexport
        shell: pwsh
        run: npm install svgexport

      - name: CREATE LOGO – Install pngout
        shell: pwsh
        run: npm install pngout-bin

      - name: CREATE LOGO – Convert SVG
        shell: pwsh
        run: >-
          node_modules/.bin/svgexport
          src/Product/NuGetTransitiveDependencyFinder/Assets/Logo.svg
          src/Product/NuGetTransitiveDependencyFinder/Assets/Logo.png

      - name: CREATE LOGO – Compress with block split threshold 0
        shell: pwsh
        run: >-
          Start-Process
          -ArgumentList 'src/Product/NuGetTransitiveDependencyFinder/Assets/Logo.png','-b0','-q'
          -FilePath 'node_modules/.bin/pngout'
          -Wait

      - name: CREATE LOGO – Compress with block split threshold 128
        shell: pwsh
        run: >-
          Start-Process
          -ArgumentList 'src/Product/NuGetTransitiveDependencyFinder/Assets/Logo.png','-b128','-q'
          -FilePath 'node_modules/.bin/pngout'
          -Wait

      - name: CREATE LOGO – Compress with block split threshold 192
        shell: pwsh
        run: >-
          Start-Process
          -ArgumentList 'src/Product/NuGetTransitiveDependencyFinder/Assets/Logo.png','-b192','-q'
          -FilePath 'node_modules/.bin/pngout'
          -Wait

      - name: CREATE LOGO – Compress with block split threshold 256
        shell: pwsh
        run: >-
          Start-Process
          -ArgumentList 'src/Product/NuGetTransitiveDependencyFinder/Assets/Logo.png','-b256','-q'
          -FilePath 'node_modules/.bin/pngout'
          -Wait

      - name: CREATE LOGO – Compress with block split threshold 512
        shell: pwsh
        run: >-
          Start-Process
          -ArgumentList 'src/Product/NuGetTransitiveDependencyFinder/Assets/Logo.png','-b512','-q'
          -FilePath 'node_modules/.bin/pngout'
          -Wait

      - name: CREATE LOGO – Compress with block split threshold 1024
        shell: pwsh
        run: >-
          Start-Process
          -ArgumentList 'src/Product/NuGetTransitiveDependencyFinder/Assets/Logo.png','-b1024','-q'
          -FilePath 'node_modules/.bin/pngout'
          -Wait

      - name: CREATE LOGO – Compress with block split threshold 2048
        shell: pwsh
        run: >-
          Start-Process
          -ArgumentList 'src/Product/NuGetTransitiveDependencyFinder/Assets/Logo.png','-b2048','-q'
          -FilePath 'node_modules/.bin/pngout'
          -Wait

      - name: CREATE LOGO – Compress with block split threshold 4096
        shell: pwsh
        run: >-
          Start-Process
          -ArgumentList 'src/Product/NuGetTransitiveDependencyFinder/Assets/Logo.png','-b4096','-q'
          -FilePath 'node_modules/.bin/pngout'
          -Wait

      - name: CREATE LOGO – Compress with block split threshold 8192
        shell: pwsh
        run: >-
          Start-Process
          -ArgumentList 'src/Product/NuGetTransitiveDependencyFinder/Assets/Logo.png','-b8192','-q'
          -FilePath 'node_modules/.bin/pngout'
          -Wait

      - name: CREATE LOGO – Delete SVG
        shell: pwsh
        run: Remove-Item -Path 'src/Product/NuGetTransitiveDependencyFinder/Assets/Logo.svg'

      # Build
      - name: BUILD – Project Restore
        shell: pwsh
        run: dotnet restore src/Product/NuGetTransitiveDependencyFinder/NuGetTransitiveDependencyFinder.csproj

      - name: BUILD – Project Build
        shell: pwsh
        run: >-
          dotnet build src/Product/NuGetTransitiveDependencyFinder/NuGetTransitiveDependencyFinder.csproj
          --configuration Release
          --no-restore
          /maxCpuCount

      # Upload
      - name: UPLOAD – Delete Documentation
        shell: pwsh
        run: Remove-Item -Path 'src/Product/NuGetTransitiveDependencyFinder/bin/NuGetTransitiveDependencyFinder.xml'

      - name: UPLOAD – Pack
        shell: pwsh
        run: >-
          dotnet pack src/Product/NuGetTransitiveDependencyFinder/NuGetTransitiveDependencyFinder.csproj
          --configuration Release
          --no-build
          /property:PackageReleaseNotes="${{ steps.release-notes.outputs.RELEASE_NOTES }}"
          /property:PackageVersion=${{ steps.version.outputs.VERSION }}
          /property:RepositoryCommit=${{ github.sha }}

      - name: UPLOAD – Upload Packages to NuGet.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        shell: pwsh
        run: >-
          dotnet nuget push
          ${{ env.nuget-package-prefix }}.${{ steps.version.outputs.VERSION }}.nupkg
          --api-key ${{ secrets.NUGET_API_KEY }}
          --skip-duplicate
          --source https://api.nuget.org/v3/index.json

      - name: UPLOAD – Upload Packages to GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: >-
          dotnet nuget push
          ${{ env.nuget-package-prefix }}.${{ steps.version.outputs.VERSION }}.nupkg
          --api-key ${{ secrets.GITHUB_TOKEN }}
          --skip-duplicate
          --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
