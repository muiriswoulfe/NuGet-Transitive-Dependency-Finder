# © Muiris Woulfe
# Licensed under the MIT License

---

name: Build

on:  # yamllint disable-line rule:truthy
  pull_request:
  push:
  schedule:
    - cron: '0 0 * * 1'

jobs:
  build-debug:
    name: Build – Debug
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Install .NET
        uses: actions/setup-dotnet@main

      - name: Install NuGet Dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Debug --no-restore /maxCpuCount

  build-release:
    name: Build – Release
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Install Java
        uses: actions/setup-java@main
        with:
          java-version: 15

      - name: Install .NET
        uses: actions/setup-dotnet@main

      - name: Install NuGet Dependencies
        run: dotnet restore

      - name: SonarCloud – Cache Packages
        uses: actions/cache@main
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud – Cache Scanner
        id: cache-sonar-scanner
        uses: actions/cache@main
        with:
          path: .sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: SonarCloud – Create Directory
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: mkdir .sonar\scanner

      - name: SonarCloud – Install Scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool update dotnet-sonarscanner --tool-path .sonar\scanner

      - name: SonarCloud – Initialize
        run: >-
          .sonar\scanner\dotnet-sonarscanner
          begin
          /k:"${{ github.repository_owner }}_${{ github.event.repository.name }}"
          /o:"${{ github.repository_owner }}"
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          /d:sonar.host.url="https://sonarcloud.io"

      - name: Build
        run: dotnet build --configuration Release --no-restore /maxCpuCount

      - name: SonarCloud – Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  validate:
    name: Validate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Lint Code Base
        uses: github/super-linter@master
        env:
          DEFAULT_BRANCH: main
          EDITORCONFIG_FILE_NAME: .editorconfig
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MARKDOWN_CONFIG_FILE: .markdownlint.json
          VALIDATE_CSHARP: true
          VALIDATE_EDITORCONFIG: true
          VALIDATE_JSON: true
          VALIDATE_MARKDOWN: true
          VALIDATE_XML: true
          VALIDATE_YAML: true

      - name: Markdown – Validate Links
        uses: gaurav-nelson/github-action-markdown-link-check@master
        with:
          config_file: .github/linters/markdown-link-check.json

      - name: JSON – Validate .markdownlint.json
        uses: Zingabopp/JsonValidate-Action@master
        with:
          json-schema: https://raw.githubusercontent.com/DavidAnson/markdownlint/main/schema/markdownlint-config-schema.json
          json-file: .markdownlint.json

      - name: JSON – Download stylecop.schema.json
        run: >-
          curl -L
          https://raw.githubusercontent.com/DotNetAnalyzers/StyleCopAnalyzers/master/StyleCop.Analyzers/StyleCop.Analyzers/Settings/stylecop.schema.json
          > stylecop.schema.json

      - name: JSON – Remove BOM from stylecop.schema.json
        run: sed -i '1s/^\xEF\xBB\xBF//' stylecop.schema.json

      - name: JSON – Correct schema for stylecop.schema.json
        run: >-
          sed -i
          's/http:\/\/json-schema\.org\/draft-04\/schema#/https:\/\/json-schema\.org\/draft-04\/schema/'
          stylecop.schema.json

      - name: JSON – Validate src/stylecop.json
        uses: Zingabopp/JsonValidate-Action@master
        with:
          json-schema: stylecop.schema.json
          json-file: src/stylecop.json

      - name: Security Scan – Validate
        uses: ShiftLeftSecurity/scan-action@master
        with:
          type: credscan,depscan

      - name: Security Scan – Upload Report
        uses: github/codeql-action/upload-sarif@main
        with:
          sarif_file: reports

  validate-codeql:
    name: Validate – CodeQL
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: CodeQL – Initialize
        uses: github/codeql-action/init@main
        with:
          queries: security-and-quality

      - name: CodeQL – Build
        uses: github/codeql-action/autobuild@main

      - name: CodeQL – Analyze
        uses: github/codeql-action/analyze@main

  create-nuget:
    name: Create NuGet Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Replace Version
        uses: datamonsters/replace-action@master
        with:
          files: src/Shared/Properties/AssemblyInfo.cs
          replacements: 0.0.1=${{ github.event.inputs.version }}

      - name: Logo – Convert to PNG
        run: >-
          rsvg-convert
          -h 128
          src/NuGetTransitiveDependencyFinder/Assets/Logo.svg
          > src/NuGetTransitiveDependencyFinder/Assets/Logo.png

      - name: Logo – Delete SVC
        run: rm src/NuGetTransitiveDependencyFinder/Assets/Logo.svg

      - name: Logo – Download PNGOUT
        run: >-
          curl -L
          https://www.jonof.id.au/files/kenutils/pngout-20200115-linux.tar.gz
          > pngout.tar.gz

      - name: Logo – Extract PNGOUT
        run: tar zxvf pngout.tar.gz

      - name: Logo – PNGOUT with Blocksize 0
        run: ./amd64/pngout src/NuGetTransitiveDependencyFinder/Assets/Logo.png 0

      - name: Logo – PNGOUT with Blocksize 128
        run: ./amd64/pngout src/NuGetTransitiveDependencyFinder/Assets/Logo.png 128

      - name: Logo – PNGOUT with Blocksize 192
        run: ./amd64/pngout src/NuGetTransitiveDependencyFinder/Assets/Logo.png 192

      - name: Logo – PNGOUT with Blocksize 256
        run: ./amd64/pngout src/NuGetTransitiveDependencyFinder/Assets/Logo.png 256

      - name: Logo – PNGOUT with Blocksize 512
        run: ./amd64/pngout src/NuGetTransitiveDependencyFinder/Assets/Logo.png 512

      - name: Logo – PNGOUT with Blocksize 1024
        run: ./amd64/pngout src/NuGetTransitiveDependencyFinder/Assets/Logo.png 1024

      - name: Logo – PNGOUT with Blocksize 2048
        run: ./amd64/pngout src/NuGetTransitiveDependencyFinder/Assets/Logo.png 2048

      - name: Logo – PNGOUT with Blocksize 4096
        run: ./amd64/pngout src/NuGetTransitiveDependencyFinder/Assets/Logo.png 4096

      - name: Logo – PNGOUT with Blocksize 8192
        run: ./amd64/pngout src/NuGetTransitiveDependencyFinder/Assets/Logo.png 8192

      - name: Install .NET
        uses: actions/setup-dotnet@main

      - name: Install NuGet Dependencies
        run: >-
          dotnet restore
          src/NuGetTransitiveDependencyFinder/NuGetTransitiveDependencyFinder.csproj

      - name: Build
        run: >-
          dotnet build
          --configuration Release
          --no-restore
          /maxCpuCount
          src/NuGetTransitiveDependencyFinder/NuGetTransitiveDependencyFinder.csproj

      - name: Delete XML Documentation
        run: rm src/NuGetTransitiveDependencyFinder/bin/NuGetTransitiveDependencyFinder.xml

      - name: Pack
        run: >-
          dotnet pack
          --configuration Release
          --no-build
          /property:RepositoryCommit=${{ github.sha }}
          /property:PackageReleaseNotes=${{ github.event.inputs.release-notes }}
          src/NuGetTransitiveDependencyFinder/NuGetTransitiveDependencyFinder.csproj

      - name: Upload – NuGet Package
        uses: actions/upload-artifact@main
        with:
          name: NuGet Package
          path: '**/*.nupkg'

      - name: Upload – NuGet Symbols Package
        uses: actions/upload-artifact@main
        with:
          name: NuGet Symbols Package
          path: '**/*.snupkg'

  create-asset:
    name: Create Asset
    runs-on: ubuntu-latest
    needs: create-release

    strategy:
      matrix:
        runtime: [linux-arm, linux-arm64, linux-musl-x64, linux-x64, osx-x64, win-arm, win-arm64, win-x64, win-x86]

    env:
      project: NuGetTransitiveDependencyFinder.ConsoleApp
      extension: >-
        {
          linux: '',
          osx: '',
          win: .exe
        }

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Replace Version
        uses: datamonsters/replace-action@master
        with:
          files: src/Shared/Properties/AssemblyInfo.cs
          replacements: 0.0.1=${{ github.event.inputs.version }}

      - name: Install .NET
        uses: actions/setup-dotnet@main

      - name: Publish
        run: >-
          dotnet publish
          --runtime ${{ matrix.runtime }}
          --configuration Release
          --self-contained true
          /maxCpuCount
          /property:PublishSingleFile=true
          /property:PublishTrimmed=true
          src/${{ env.project }}/${{ env.project }}.csproj

      - name: Get Release
        id: get_release
        uses: bruceadams/get-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Platform from Runtime
        uses: jungwinter/split@master
        id: split
        with:
          msg: ${{ matrix.runtime }}
          seperator: '-'

      - name: Set Current Extension
        id: setter
        run: echo '::set-output name=current_extension::${{ fromJson(env.extension)[steps.split.outputs._0] }}'

      - name: Upload – Release Asset
        uses: actions/upload-artifact@main
        with:
          name: NuGetTransitiveDependencyFinder.${{ matrix.runtime }}${{ steps.setter.outputs.current_extension }}
          path: >-
            ${{ github.workspace }}/src/${{ env.project }}/bin/Release/net5.0/${{ matrix.runtime }}/publish/${{ env.project }}${{ steps.setter.outputs.current_extension }}
