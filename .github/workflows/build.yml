# © Muiris Woulfe
# Licensed under the MIT License

---

name: Build

on:  # yamllint disable-line rule:truthy
  pull_request:
  push:
  schedule:
    - cron: '0 0 * * 1'

jobs:
  build-debug:
    name: Build – Debug
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Install .NET
        uses: actions/setup-dotnet@main

      - name: Install NuGet Dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Debug --no-restore /maxCpuCount

  build-release:
    name: Build – Release
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Install Java
        uses: actions/setup-java@main
        with:
          java-version: 15

      - name: Install .NET
        uses: actions/setup-dotnet@main

      - name: Install NuGet Dependencies
        run: dotnet restore

      - name: SonarCloud – Cache Packages
        uses: actions/cache@main
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud – Cache Scanner
        id: cache-sonar-scanner
        uses: actions/cache@main
        with:
          path: .sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: SonarCloud – Create Directory
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: mkdir .sonar\scanner

      - name: SonarCloud – Install Scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool update dotnet-sonarscanner --tool-path .sonar\scanner

      - name: SonarCloud – Initialize
        run: >-
          .sonar\scanner\dotnet-sonarscanner
          begin
          /k:"${{ github.repository_owner }}_${{ github.event.repository.name }}"
          /o:"${{ github.repository_owner }}"
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          /d:sonar.host.url="https://sonarcloud.io"

      - name: Build
        run: dotnet build --configuration Release --no-restore /maxCpuCount

      - name: SonarCloud – Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  validate:
    name: Validate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: EditorConfig – Download
        run: >-
          curl -L
          ${{ github.server_url }}/editorconfig-checker/editorconfig-checker/releases/download/2.2.0/ec-linux-amd64.tar.gz
          > editorconfig.tar.gz

      - name: EditorConfig – Extract
        run: tar zxvf editorconfig.tar.gz

      - name: EditorConfig – Validate
        run: ./bin/ec-linux-amd64

      - name: Markdown – Validate
        uses: nosborn/github-action-markdown-cli@master
        with:
          files: '**/*.md'
          config_file: .markdownlint.json

      - name: Markdown – Validate .github
        uses: nosborn/github-action-markdown-cli@master
        with:
          files: .github/*.md
          config_file: .markdownlint.json

      - name: Markdown – Validate .github subdirectories
        uses: nosborn/github-action-markdown-cli@master
        with:
          files: .github/**/*.md
          config_file: .markdownlint.json

      - name: Markdown – Validate Links
        uses: gaurav-nelson/github-action-markdown-link-check@master

      - name: YAML – Validate
        uses: ibiqlik/action-yamllint@master
        with:
          config_file: .yamllint.yml
          format: standard
          strict: true

      - name: JSON – Validate .markdownlint.json
        uses: Zingabopp/JsonValidate-Action@master
        with:
          json-schema: https://raw.githubusercontent.com/DavidAnson/markdownlint/main/schema/markdownlint-config-schema.json
          json-file: .markdownlint.json

      - name: JSON – Validate .markdownlint.json
        uses: Zingabopp/JsonValidate-Action@master
        with:
          json-schema: https://raw.githubusercontent.com/DavidAnson/markdownlint/main/schema/markdownlint-config-schema.json
          json-file: .markdownlint.json

      - name: JSON – Download stylecop.schema.json
        run: >-
          curl -L
          https://raw.githubusercontent.com/DotNetAnalyzers/StyleCopAnalyzers/master/StyleCop.Analyzers/StyleCop.Analyzers/Settings/stylecop.schema.json
          > stylecop.schema.json

      - name: JSON – Remove BOM from stylecop.schema.json
        run: sed -i '1s/^\xEF\xBB\xBF//' stylecop.schema.json

      - name: JSON – Correct schema for stylecop.schema.json
        run: >-
          sed -i
          's/http:\/\/json-schema\.org\/draft-04\/schema#/https:\/\/json-schema\.org\/draft-04\/schema/'
          stylecop.schema.json

      - name: JSON – Validate src/stylecop.json
        uses: Zingabopp/JsonValidate-Action@master
        with:
          json-schema: stylecop.schema.json
          json-file: src/stylecop.json

      - name: SVG
        uses: actions/setup-haskell@main

      - run: cabal install html-validator-cli

      - run: validatehtml src/NuGetTransitiveDependencyFinder/Assets/Logo.svg

      - run: validatehtml src/NuGetTransitiveDependencyFinder.ConsoleApp/Resources/Strings.resx

      - name: Security Scan – Validate
        uses: ShiftLeftSecurity/scan-action@master
        with:
          type: credscan,depscan

      - name: Security Scan – Upload Report
        uses: github/codeql-action/upload-sarif@main
        with:
          sarif_file: reports

  validate-codeql:
    name: Validate – CodeQL
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: CodeQL – Initialize
        uses: github/codeql-action/init@main
        with:
          queries: security-and-quality

      - name: CodeQL – Build
        uses: github/codeql-action/autobuild@main

      - name: CodeQL – Analyze
        uses: github/codeql-action/analyze@main
