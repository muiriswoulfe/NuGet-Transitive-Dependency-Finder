# © Muiris Woulfe
# Licensed under the MIT License

name: Build

on:
  pull_request:
  push:
  schedule:
  - cron: '0 0 * * 1'

jobs:
  build-debug:
    name: Build – Debug
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout

    - name: Install .NET
      uses: actions/setup-dotnet

    - name: Install NuGet Dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Debug --no-restore /maxCpuCount

  build-release:
    name: Build – Release
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout
      with:
        fetch-depth: 0

    - name: Install Java
      uses: actions/setup-java

    - name: Install .NET
      uses: actions/setup-dotnet

    - name: Install NuGet Dependencies
      run: dotnet restore

    - name: SonarCloud – Cache Packages
      uses: actions/cache
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: SonarCloud – Cache Scanner
      id: cache-sonar-scanner
      uses: actions/cache
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: SonarCloud – Install Scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

    - name: SonarCloud – Initialize
      shell: pwsh
      run: >-
        .\.sonar\scanner\dotnet-sonarscanner
        begin
        /k:"${{ github.repository_owner }}_${{ github.event.repository.name }}"
        /o:"${{ github.repository_owner }}"
        /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        /d:sonar.host.url="https://sonarcloud.io"

    - name: Build
      run: dotnet build --configuration Release --no-restore /maxCpuCount

    - name: SonarCloud – Analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: pwsh
      run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  validate:
    name: Validate
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout

    - name: EditorConfig – Download
      run: >-
        curl -L
        ${{ github.server_url }}/editorconfig-checker/editorconfig-checker/releases/download/2.2.0/ec-linux-amd64.tar.gz
        > editorconfig.tar.gz

    - name: EditorConfig – Extract
      run: tar zxvf editorconfig.tar.gz

    - name: EditorConfig – Validate
      run: ./bin/ec-linux-amd64

    - name: Markdown – Validate
      uses: nosborn/github-action-markdown-cli
      with:
        files: '**/*.md'
        config_file: .markdownlint.json

    - name: Markdown – Validate .github
      uses: nosborn/github-action-markdown-cli
      with:
        files: .github/*.md
        config_file: .markdownlint.json

    - name: Markdown – Validate .github subdirectories
      uses: nosborn/github-action-markdown-cli
      with:
        files: .github/**/*.md
        config_file: .markdownlint.json

    - name: Markdown – Validate Links
      uses: gaurav-nelson/github-action-markdown-link-check

    - name: YAML – Validate
      uses: leon-th/yaml-checker

    - name: JSON – Validate .markdownlint.json
      uses: Zingabopp/JsonValidate-Action
      with:
        json-schema: https://raw.githubusercontent.com/DavidAnson/markdownlint/main/schema/markdownlint-config-schema.json
        json-file: .markdownlint.json

    - name: JSON – Validate mlc_config.json
      uses: Zingabopp/JsonValidate-Action
      with:
        json-schema: https://json-schema.org/draft/2019-09/meta/core
        json-file: mlc_config.json

    - name: JSON – Validate src/global.json
      uses: Zingabopp/JsonValidate-Action
      with:
        json-schema: https://json-schema.org/draft/2019-09/meta/core
        json-file: src/global.json

    - name: JSON – Validate src/stylecop.json
      uses: Zingabopp/JsonValidate-Action
      with:
        json-schema: https://raw.githubusercontent.com/DotNetAnalyzers/StyleCopAnalyzers/master/StyleCop.Analyzers/StyleCop.Analyzers/Settings/stylecop.schema.json
        json-file: src/stylecop.json

    - name: Security Scan – Validate
      uses: ShiftLeftSecurity/scan-action
      with:
        type: credscan,depscan

    - name: Security Scan – Upload Report
      uses: github/codeql-action/upload-sarif
      with:
        sarif_file: reports

  validate-codeql:
    name: Validate – CodeQL
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout

    - name: CodeQL – Initialize
      uses: github/codeql-action/init
      with:
        queries: security-and-quality

    - name: CodeQL – Build
      uses: github/codeql-action/autobuild

    - name: CodeQL – Analyze
      uses: github/codeql-action/analyze
